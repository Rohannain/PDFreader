{"ast":null,"code":"var _jsxFileName = \"/Users/user/AI/chatbot/chatbot_frontend/src/pages/UploadPDF.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './components/uploadpdf.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPDF = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [key, setKey] = useState('');\n  const [message, setMessage] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const handleFileChange = event => {\n    setFiles(event.target.files);\n  };\n  const handleKeyChange = event => {\n    setKey(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (files.length === 0) {\n      setMessage('Please select at least one file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('key', key);\n    for (let i = 0; i < files.length; i++) {\n      formData.append('files', files[i]);\n    }\n    try {\n      setIsSending(true);\n      setMessage('Please wait while we process the documents.');\n      const response = await axios.post('http://localhost:8000/api/store-documents/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setIsSending(false);\n      setMessage(`Successfully stored documents. Key: ${response.data.key}`);\n    } catch (error) {\n      setMessage('Error storing documents.');\n      console.error(error);\n    }\n  };\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(message).then(() => {\n      alert('Copied to clipboard!');\n    }).catch(err => {\n      console.error('Failed to copy:', err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload PDF and Key\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"keyInput\",\n          disabled: isSending,\n          children: \"Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"keyInput\",\n          value: key,\n          onChange: handleKeyChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          disabled: isSending,\n          children: \"PDF Files:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          onChange: handleFileChange,\n          accept: \".pdf\",\n          multiple: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSending,\n        children: isSending ? 'Please Wait' : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copyToClipboard,\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPDF, \"Jz8wjQge3uiXw7ZDv29G0WymYJ0=\");\n_c = UploadPDF;\nexport default UploadPDF;\nvar _c;\n$RefreshReg$(_c, \"UploadPDF\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadPDF","_s","files","setFiles","key","setKey","message","setMessage","isSending","setIsSending","handleFileChange","event","target","handleKeyChange","value","handleSubmit","preventDefault","length","formData","FormData","append","i","response","post","headers","data","error","console","copyToClipboard","navigator","clipboard","writeText","then","alert","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","disabled","type","id","onChange","accept","multiple","required","onClick","_c","$RefreshReg$"],"sources":["/Users/user/AI/chatbot/chatbot_frontend/src/pages/UploadPDF.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './components/uploadpdf.css'\n\nconst UploadPDF = () => {\n  const [files, setFiles] = useState([]);\n  const [key, setKey] = useState('');\n  const [message, setMessage] = useState('');\n  const [isSending, setIsSending] = useState(false);\n\n  const handleFileChange = (event) => {\n    setFiles(event.target.files);\n  };\n\n  const handleKeyChange = (event) => {\n    setKey(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (files.length === 0) {\n      setMessage('Please select at least one file.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('key', key);\n\n    for (let i = 0; i < files.length; i++) {\n      formData.append('files', files[i]);\n    }\n\n    try {\n      setIsSending(true);\n      setMessage('Please wait while we process the documents.');\n\n      const response = await axios.post('http://localhost:8000/api/store-documents/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setIsSending(false);\n      setMessage(`Successfully stored documents. Key: ${response.data.key}`);\n    } catch (error) {\n      setMessage('Error storing documents.');\n      console.error(error);\n    }\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(message)\n      .then(() => {\n        alert('Copied to clipboard!');\n      })\n      .catch(err => {\n        console.error('Failed to copy:', err);\n      });\n  };\n\n  return (\n    <div className=\"upload-container\">\n      <h2>Upload PDF and Key</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"keyInput\" disabled={isSending}>Key:</label>\n          <input type=\"text\" id=\"keyInput\" value={key} onChange={handleKeyChange}/>\n        </div>\n        <div>\n          <label htmlFor=\"fileInput\" disabled={isSending}>PDF Files:</label>\n          <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} accept=\".pdf\" multiple required />\n        </div>\n        <button type=\"submit\" disabled={isSending}>\n          {isSending ? 'Please Wait' : 'Upload'}\n        </button>\n      </form>\n      {message && (\n        <div className=\"message-container\">\n          <p>{message}</p>\n          <button onClick={copyToClipboard}>Copy</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UploadPDF;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
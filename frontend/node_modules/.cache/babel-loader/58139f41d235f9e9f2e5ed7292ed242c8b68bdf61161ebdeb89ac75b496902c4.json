{"ast":null,"code":"var _jsxFileName = \"/Users/user/AI/chatbot/chatbot_frontend/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n  const sendMessage = async () => {\n    // add the user's message to the chat\n    setChat(prevChat => [...prevChat, {\n      message,\n      isUser: true\n    }]);\n    try {\n      // send a POST request to the chatbot API with the user's message\n      const response = await axios.post('http://localhost:8000/chatbot/', {\n        message\n      });\n\n      // add the chatbot's response to the chat\n      setChat(prevChat => [...prevChat, {\n        message: response.data.message,\n        isUser: false\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n\n    // clear the message input field\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: chat.map((chatMessage, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${chatMessage.isUser ? 'user' : 'chatbot'}`,\n        children: [chatMessage.isUser ? 'User: ' : 'Bot: ', \" \", chatMessage.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => {\n        e.preventDefault();\n        sendMessage();\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Type your message here\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"+uaI6MFTr11lxLnYd50z3kcTqJk=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","Container","Form","Button","axios","jsxDEV","_jsxDEV","Chatbot","_s","message","setMessage","chat","setChat","sendMessage","prevChat","isUser","response","post","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","chatMessage","index","onSubmit","e","preventDefault","Group","Control","type","placeholder","value","onChange","target","variant","_c","$RefreshReg$"],"sources":["/Users/user/AI/chatbot/chatbot_frontend/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nfunction Chatbot() {\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n\n  const sendMessage = async () => {\n    // add the user's message to the chat\n    setChat((prevChat) => [...prevChat, { message, isUser: true }]);\n\n    try {\n      // send a POST request to the chatbot API with the user's message\n      const response = await axios.post('http://localhost:8000/chatbot/', { message });\n\n      // add the chatbot's response to the chat\n      setChat((prevChat) => [...prevChat, { message: response.data.message, isUser: false }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n\n    // clear the message input field\n    setMessage('');\n  }\n\n  return (\n    <Container>\n      <h1>Chatbot</h1>\n      <div className=\"chat\">\n        {chat.map((chatMessage, index) => (\n          <div key={index} className={`message ${chatMessage.isUser ? 'user' : 'chatbot'}`}>\n            {chatMessage.isUser ? 'User: ' : 'Bot: '} {chatMessage.message}\n          </div>\n        ))}\n      </div>\n      <Form onSubmit={(e) => { e.preventDefault(); sendMessage(); }}>\n        <Form.Group>\n          <Form.Control type=\"text\" placeholder=\"Type your message here\" value={message} onChange={(e) => setMessage(e.target.value)} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Send\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}